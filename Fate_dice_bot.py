import random
import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext

# ==== –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ-–ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è ====
def keep_alive():
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –∑–∞—Å—ã–ø–∞–ª"""
    while True:
        try:
            # –ü–∏–Ω–≥—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
            requests.get('https://www.google.com', timeout=10)
            print(f"üîÑ Keep-alive ping sent at {time.strftime('%Y-%m-%d %H:%M:%S')}")
        except Exception as e:
            print(f"‚ö†Ô∏è Keep-alive error: {e}")
        time.sleep(300)  # –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

# ==== –¢–æ–ª–∫–æ–≤–∞–Ω–∏—è ====
SUM_INTERPRETATION = {
    2: "‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ. –ù–µ –≤—Ä–µ–º—è, –Ω–µ —Ç—ã, –Ω–µ —Å—É–¥—å–±–∞.",
    3: "üïØÔ∏è –¢–µ–Ω—å —à–∞–Ω—Å–∞. –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä–æ–±–ª–µ—Å–∫.",
    4: "‚öñÔ∏è –í—Å—ë –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤. –ù—É–∂–Ω—ã —É—Å–∏–ª–∏—è.",
    5: "üåÄ –ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å. –ü–µ—Ä–µ–º–µ–Ω—ã –≤ –¥–≤–∏–∂–µ–Ω–∏–∏.",
    6: "üå´Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –µ—Å—Ç—å, –Ω–æ —Å–∫—Ä—ã—Ç–∞. –¢—Ä–µ–±—É–µ—Ç—Å—è –∏–Ω—Ç—É–∏—Ü–∏—è.",
    7: "üí´ –ü–æ–ª—É—á–∏—Ç—Å—è, –Ω–æ –Ω–µ —Ç–∞–∫, –∫–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å.",
    8: "üîÆ –í—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞. –î–µ–π—Å—Ç–≤—É–π!",
    9: "üåü –î–∞, –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —É–º–Ω–æ –∏ –≤–æ–≤—Ä–µ–º—è.",
    10: "üèÜ –£—Å–ø–µ—Ö –ø–æ—á—Ç–∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω. –ü–æ–±–µ–¥–∞ –±–ª–∏–∑–∫–∞.",
    11: "üåà –ß—É–¥–æ –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –ø–æ–≤–æ—Ä–æ—Ç. –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –∑–Ω–∞–∫.",
    12: "‚úÖ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç. –°—É–¥—å–±–∞ –≥–æ–≤–æ—Ä–∏—Ç '–¥–∞'.",
}

DICE_COMBINATIONS = {
    # (1,1) - (1,6)
    (1, 1): "–¶–∏–∫–ª –∑–∞–≤–µ—Ä—à—ë–Ω. –ù–∞—á–Ω—ë—Ç—Å—è –Ω–æ–≤–æ–µ.",
    (1, 2): "–ü–µ—Ä–≤—ã–π —à–∞–≥. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –¥–≤–µ—Ä—å.",
    (1, 3): "–ú—ã—Å–ª–∏ –æ –≤–æ–∑–º–æ–∂–Ω–æ–º –±—É–¥—É—â–µ–º.",
    (1, 4): "–ù—É–∂–Ω–æ –≤—Ä–µ–º—è. –ü–æ–¥–æ–∂–¥–∏.",
    (1, 5): "–õ–æ–º–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ. –ù–æ–≤–æ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è.",
    (1, 6): "–ß—É–¥–æ –≤–æ–∑–º–æ–∂–Ω–æ. –£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ.",
    
    # (2,1) - (2,6)
    (2, 1): "–ü–µ—Ä–≤—ã–π —à–∞–≥. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –¥–≤–µ—Ä—å.",
    (2, 2): "–¢—ã –≤–∏–¥–∏—à—å —Å–µ–±—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã. –ò—Å–ø—ã—Ç–∞–Ω–∏–µ –∑–µ—Ä–∫–∞–ª–æ–º.",
    (2, 3): "–î–∏–∞–ª–æ–≥ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç –∏–ª–∏ –≥–∞—Ä–º–æ–Ω–∏—è.",
    (2, 4): "–ë–∞–ª–∞–Ω—Å —Å–∏–ª. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ.",
    (2, 5): "–ü–µ—Ä–µ–º–µ–Ω—ã –Ω–µ–∏–∑–±–µ–∂–Ω—ã. –ü—Ä–∏–º–∏ –∏—Ö.",
    (2, 6): "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤—ã—à–µ. –ö—Ç–æ-—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ.",
    
    # (3,1) - (3,6)
    (3, 1): "–ú—ã—Å–ª–∏ –æ –≤–æ–∑–º–æ–∂–Ω–æ–º –±—É–¥—É—â–µ–º.",
    (3, 2): "–î–∏–∞–ª–æ–≥ –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç –∏–ª–∏ –≥–∞—Ä–º–æ–Ω–∏—è.",
    (3, 3): "–°–æ–∑–¥–∞–Ω–∏–µ. –ß—Ç–æ —Ç—ã –∑–∞–¥—É–º–∞–ª ‚Äî –≤–æ–ø–ª–æ—Ç–∏—Ç—Å—è.",
    (3, 4): "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ. –¢—ã —Å—Ç—Ä–æ–∏—à—å –Ω–æ–≤—ã–π —ç—Ç–∞–ø.",
    (3, 5): "–†–∞–∑—Ä—É—à–µ–Ω–∏–µ –¥–ª—è —Ä–æ—Å—Ç–∞. –°—Ç–∞—Ä–æ–µ —É—Ö–æ–¥–∏—Ç.",
    (3, 6): "–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ø–æ–±–µ–¥–∞. –ò—Å–∫—É—Å—Å—Ç–≤–æ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç –±—É–¥—É—Ç –∑–∞–º–µ—á–µ–Ω—ã.",
    
    # (4,1) - (4,6)
    (4, 1): "–ù—É–∂–Ω–æ –≤—Ä–µ–º—è. –ü–æ–¥–æ–∂–¥–∏.",
    (4, 2): "–ë–∞–ª–∞–Ω—Å —Å–∏–ª. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ.",
    (4, 3): "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ. –¢—ã —Å—Ç—Ä–æ–∏—à—å –Ω–æ–≤—ã–π —ç—Ç–∞–ø.",
    (4, 4): "–ò—Å–ø—ã—Ç–∞–Ω–∏–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ–º. –°–∏–ª–∞ –≤ —Å—Ç–æ–π–∫–æ—Å—Ç–∏.",
    (4, 5): "–ö–æ–Ω–µ—Ü –æ–¥–Ω–æ–≥–æ, –Ω–∞—á–∞–ª–æ –¥—Ä—É–≥–æ–≥–æ. –ü–µ—Ä–µ—Ö–æ–¥.",
    (4, 6): "–°—Ç–∞–±–∏–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞. –£—Å–ø–µ—Ö –±—É–¥–µ—Ç –¥–æ–ª–≥–∏–º.",
    
    # (5,1) - (5,6)
    (5, 1): "–õ–æ–º–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ. –ù–æ–≤–æ–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è.",
    (5, 2): "–ü–µ—Ä–µ–º–µ–Ω—ã –Ω–µ–∏–∑–±–µ–∂–Ω—ã. –ü—Ä–∏–º–∏ –∏—Ö.",
    (5, 3): "–†–∞–∑—Ä—É—à–µ–Ω–∏–µ –¥–ª—è —Ä–æ—Å—Ç–∞. –°—Ç–∞—Ä–æ–µ —É—Ö–æ–¥–∏—Ç.",
    (5, 4): "–ö–æ–Ω–µ—Ü –æ–¥–Ω–æ–≥–æ, –Ω–∞—á–∞–ª–æ –¥—Ä—É–≥–æ–≥–æ. –ü–µ—Ä–µ—Ö–æ–¥.",
    (5, 5): "–ü–æ–ª–Ω–æ–µ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ.",
    (5, 6): "–†–µ–∑–∫–∏–π —Å–∫–∞—á–æ–∫. –í–Ω–µ–∑–∞–ø–Ω—ã–π —É—Å–ø–µ—Ö.",
    
    # (6,1) - (6,6)
    (6, 1): "–ß—É–¥–æ –≤–æ–∑–º–æ–∂–Ω–æ. –£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ.",
    (6, 2): "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤—ã—à–µ. –ö—Ç–æ-—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ.",
    (6, 3): "–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ø–æ–±–µ–¥–∞. –ò—Å–∫—É—Å—Å—Ç–≤–æ –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç –±—É–¥—É—Ç –∑–∞–º–µ—á–µ–Ω—ã.",
    (6, 4): "–°—Ç–∞–±–∏–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞. –£—Å–ø–µ—Ö –±—É–¥–µ—Ç –¥–æ–ª–≥–∏–º.",
    (6, 5): "–†–µ–∑–∫–∏–π —Å–∫–∞—á–æ–∫. –í–Ω–µ–∑–∞–ø–Ω—ã–π —É—Å–ø–µ—Ö.",
    (6, 6): "–í—ã—Å—à–∞—è —É–¥–∞—á–∞. –í—Å–µ –∑–≤—ë–∑–¥—ã —Å–æ—à–ª–∏—Å—å."
}

def throw_dice():
    return random.randint(1, 6), random.randint(1, 6)

def interpret(a, b):
    total = a + b
    is_pair = a == b
    
    return {
        "dice": (a, b),
        "total": total,
        "is_pair": is_pair,
        "energy": "a > b" if a > b else ("a < b" if a < b else "a = b"),
        "sum_interpretation": SUM_INTERPRETATION.get(total, "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç—Ä–µ–±—É–µ—Ç –æ—Å–º—ã—Å–ª–µ–Ω–∏—è."),
        "combination_interpretation": DICE_COMBINATIONS.get((a, b), "üéØ –£–Ω–∏–∫–∞–ª—å–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è.")
    }

def start(update: Update, context: CallbackContext):
    welcome_text = """
üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –û—Ä–∞–∫—É–ª –ö–æ—Å—Ç–µ–π! üåü

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /ask –∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è.

üìù –ü—Ä–∏–º–µ—Ä:
/ask –ñ–¥–∞—Ç—å –ª–∏ –º–Ω–µ –ø–µ—Ä–µ–º–µ–Ω –≤ –∂–∏–∑–Ω–∏?
/ask –°—Ç–æ–∏—Ç –ª–∏ –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç?
    """
    update.message.reply_text(welcome_text)

def ask(update: Update, context: CallbackContext):
    if not context.args:
        update.message.reply_text("‚ùå –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /ask")
        return

    user_question = " ".join(context.args)
    a, b = throw_dice()
    interpretation = interpret(a, b)

    message = f"üîÆ –í–æ–ø—Ä–æ—Å: {user_question}\n\n"
    message += f"üé≤ –ö–æ—Å—Ç–∏: ({a}, {b}) ‚Üí –°—É–º–º–∞: {interpretation['total']}\n\n"
    message += f"üìú –¢–æ–ª–∫–æ–≤–∞–Ω–∏–µ: {interpretation['sum_interpretation']}\n"

    if "–£–Ω–∏–∫–∞–ª—å–Ω–∞—è" not in interpretation['combination_interpretation']:
        message += f"\nüß© –ö–æ–º–±–∏–Ω–∞—Ü–∏—è ({a},{b}): {interpretation['combination_interpretation']}"

    if interpretation["is_pair"]:
        message += f"\n\nüîÑ –≠—Ç–æ –ø–∞—Ä–∞ {a}! –û—Å–æ–±–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ."

    energy_meaning = {
        "a > b": "üî∏ –¢—ã –≤–µ–¥—ë—à—å —Å–∏—Ç—É–∞—Ü–∏—é. –ú–æ–∂–µ—à—å –≤–ª–∏—è—Ç—å –Ω–∞ —Å–æ–±—ã—Ç–∏—è.",
        "a < b": "üî∏ –°–∏—Ç—É–∞—Ü–∏—è –≤–µ–¥—ë—Ç —Ç–µ–±—è. –ü—Ä–∏—Å–ª—É—à–∞–π—Å—è –∫ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º.",
        "a = b": "üî∏ –ì–∞—Ä–º–æ–Ω–∏—è –º–µ–∂–¥—É —Ç–æ–±–æ–π –∏ –º–∏—Ä–æ–º."
    }
    message += f"\n\n‚ö° –≠–Ω–µ—Ä–≥–∏—è: {energy_meaning[interpretation['energy']]}"

    update.message.reply_text(message)

def help_command(update: Update, context: CallbackContext):
    help_text = """
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/ask [–≤–æ–ø—Ä–æ—Å] - –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
/help - –ü–æ–º–æ—â—å

üé≤ –ë–æ—Ç –±—Ä–æ—Å–∞–µ—Ç –∫–æ—Å—Ç–∏ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç!
    """
    update.message.reply_text(help_text)

def main():
    BOT_TOKEN = "7963571696:AAFEkKbe_V4eVf9TPhnaW4yQOijX-hI6tYk"
    
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("ask", ask))
    dp.add_handler(CommandHandler("help", help_command))

    print("üöÄ –ë–æ—Ç –û—Ä–∞–∫—É–ª –ö–æ—Å—Ç–µ–π –∑–∞–ø—É—â–µ–Ω...")
    
    # ==== –î–õ–Ø RENDER.COM ====
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º polling –≤–º–µ—Å—Ç–æ webhook –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
    # Webhook —Ç—Ä–µ–±—É–µ—Ç HTTPS –¥–æ–º–µ–Ω–∞ –∏ —Å–ª–æ–∂–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    updater.start_polling()
    print("ü§ñ –ë–æ—Ç –Ω–∞—á–∞–ª –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    updater.idle()

if __name__ == '__main__':
    main()
